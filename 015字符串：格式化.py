# 字符串格式化
# format()方法：接受位置参数和关键字参数
# '{0}love{1}.{2}'.format('I','FishC','com')  位置参数
# '{a}love{b}.{c}'.format(a='I',b='FishC',c='com')  关键字参数
# '{a}love{b}.{0}'.format(a='I',b='FishC',0='com')  混合参数  
# 如果混合使用位置参数必须在关键字参数之前 否则位置参数会被认为是关键字参数
# 如果我们想打印一个{} 
# '{{0}}'.format('不打印')

# '{0:0.1f}{}'.format(27.658,'GB')
# :格式化符号开始后接格式化符号
# .1四舍五入保留一位小数点
# f打印定点数 小数


# >>> '%5.1f' % 27.678
# ' 27.7'
# >>> '%.2e' % 27.6789
# '2.77e+01'
# >>> '%10d' % 5
# '         5'
# >>> '%-10d' % 5
# '5         '
# >>> '%010d' % 5
# '0000000005'
# >>> '% # x' % 100
# '0x64' 
# '%c' %97 格式化字符及ASCII码 '%c %c %c' %(97,98,99) 等于a b c 将ASCII码转换格式化为对应的字符 
# '%s' %'97' 格式化字符串
# '%d' %'4+5' 格式为整数
# '%o' %'10'  格式化为无符号八进制数
# '%x' %'10'  格式化为无符号十六进制数
# '%x' %'10'  格式化为无符号十六进制数(大写)
# '%f' %'10'  格式化为定点数(小数)，可指定精度 默认精确到6位小数
# '%e' %'1000'格式化为科学计数法定点数
# '%E' %'1000'格式化为科学计数法定点数(大写E)
# '%g' %'10' 根据值的大小来决定使用%f(小数)或%e(科学计数法)
# '%G' %'10' 同%g (大写E)


# 格式化操作辅助命令
# m.n m是显示的最小总宽度(占位)，n是小数点后的位数 '%fm.n'
# - 向左对齐 '%-10d'%5  最小宽度10 向左对齐
# + 显示正负符号
# # 在八进制前显示('0o'),在十六进制显示0x或者0X '%#0' %10 把10转换为8进制并加上0o  16进制同理'%#x'
# '%010d' %5 格式化为整数占10位并在整数前加0
# '%10d' %5 格式化为整数占10位在整数前留空
# '%-010d' %5 格式化为整数占10位 左对齐 右留空

# \'	单引号
# \"	双引号
# \a	发出系统响铃声
# \b	退格符
# \n	换行符
# \t	横向制表符（TAB）
# \v	纵向制表符
# \r	回车符
# \f	换页符
# \o	八进制数代表的字符
# \x	十六进制数代表的字符
# \0	表示一个空字符
# \\	反斜杠



# '{0}{1:.2f}'.format('pi=',3.1415)
# '{位置参数0}{位置参数1:精确到小数点后两位.2格式化为定点数f}




# num=0
# while num!='Q':
# 	num=input('请输入一个整数(输入Q结束程序)')
# 	while not num.isdigit():
# 		num=input('你输入的不是一个整数请重新输入')
# 	num=int(num)
# 	print('{0}{1}{2}{3}{4}'.format('十进制->','二进制：',num,'->',bin(num)))
# 	print('{0}{1}{2}{3}{4:#o}'.format('十进制->','八进制：',num,'->',num))
# 	print('{0}{1}{2}{3}{4:#x}'.format('十进制->','十六进制：',num,'->',num))
# 	num=input('请输入一个整数(输入Q结束程序)')

# # 写法二
# num = input("请输入一个整数（输入Q结束程序）：")
# while num.upper() != 'Q':    
#     if num.isdigit():
#         num = int(num)
#         print('十进制 -> 十六进制：%d -> %#x'%(num,num))
#         print('十进制 -> 八进制：%d -> %#o'%(num,num))
#         print('十进制 -> 二进制：%d -> '%num,bin(num))
#         num = input("请输入一个整数（输入Q结束程序）：")
#     else:
#         if num == 'Q':
#             break
#         else:
#             num = input("输入不合法，请输入一个整数（输入Q结束程序）：")